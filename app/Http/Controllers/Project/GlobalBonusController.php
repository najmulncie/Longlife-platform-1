<?php

namespace App\Http\Controllers\Project;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\User;
use App\Models\BonusHistory;
use Illuminate\Support\Facades\Auth;

class GlobalBonusController extends Controller
{
  public function index()
    {
        $user = Auth::user();
        $userId = $user->id;
    
        // Level 1 referrals
        $level1Users = User::where('referred_by', $userId)->pluck('id');
    
        // рж╕ржХрзНрж░рж┐рзЯ Level 2 referrals
        $activeLevel2 = User::whereIn('referred_by', $level1Users)
                            ->where('is_active', true)
                            ->get();
    
        // ржорзЛржЯ ржмрзЛржирж╛рж╕ ржЧрзНрж░рж╣ржг рж╕ржВржЦрзНржпрж╛
        $bonusHistoriesCount = BonusHistory::where('user_id', $userId)
                                          ->where('amount', 600)
                                          ->count();
    
        // ржПржЦржи ржирждрзБржи ржПржХржЯрж┐ржн рж░рзЗржлрж╛рж░ ржмрзЗрж░ ржХрж░рзБржи, ржпрж╛ржжрзЗрж░ ржЬржирзНржп ржмрзЛржирж╛рж╕ ржкрж╛ржУрзЯрж╛ рж╣рзЯржирж┐
        $claimedRefersCount = $bonusHistoriesCount * 20; 
    
        $newActiveRefers = $activeLevel2->slice($claimedRefersCount);
    
        // View рждрзЗ ржкрж╛ржарж╛ржирзЛ ржбрзЗржЯрж╛
        return view('project.global-bonus', [
            'activeRefers' => $newActiveRefers,  // Progress bar ржПрж░ ржЬржирзНржп ржирждрзБржи ржПржХржЯрж┐ржн рж░рзЗржлрж╛рж░
            'bonusHistories' => BonusHistory::where('user_id', $userId)->latest()->get(),
            'required' => 20,
            'bonusAmount' => 600,
        ]);
    }



    public function achieve()
    {
        $user = Auth::user();
    
        // Level 1 users referred by current user
        $level1Users = User::where('referred_by', $user->id)->pluck('id');
    
        // ржорзЛржЯ ржмрзЛржирж╛рж╕рзЗрж░ рж╣рж┐рж╕рзНржЯрзНрж░рж┐
        $bonusHistoriesCount = BonusHistory::where('user_id', $user->id)
                                          ->where('amount', 600)
                                          ->count();
    
        // Claim ржХрж░рж╛ ржмрзЛржирж╛рж╕ ржЕржирзБрж╕рж╛рж░рзЗ ржХрждржЬржи рж░рзЗржлрж╛рж░ ржЧрзЛржирж╛ рж╣ржмрзЗ
        $claimedRefersCount = $bonusHistoriesCount * 20;
    
        $activeLevel2 = User::whereIn('referred_by', $level1Users)
                            ->where('is_active', true)
                            ->get();
    
        // ржирждрзБржи active refers ржпрж╛рж░рж╛ ржПржЦржирзЛ ржмрзЛржирж╛рж╕рзЗрж░ ржЖржУрждрж╛ржпрж╝ ржкржбрж╝рзЗржирж┐, slice ржХрж░рзЗ ржирж┐ржЪрзНржЫрж┐
        $newActiveRefers = $activeLevel2->slice($claimedRefersCount);
    
    
        $activeCount = $newActiveRefers->count();
    
        $required = 20; 
    
        if ($activeCount < $required) {
            return redirect()->back()->with('error', 'ржЖржкржирж╛рж░ ржжрзНржмрж┐рждрзАрзЯ рж▓рзЗржнрзЗрж▓рзЗ ржЕржирзНрждржд рзиржЯрж┐ ржирждрзБржи ржПржХржЯрж┐ржн рж░рзЗржлрж╛рж░ ржерж╛ржХрждрзЗ рж╣ржмрзЗред');
        }
    
        // ржирждрзБржи ржмрзЛржирж╛рж╕ рждрзИрж░рж┐ ржХрж░рзБржи
        BonusHistory::create([
            'user_id' => $user->id,
            'amount' => 600,
        ]);
    
        return redirect()->back()->with('success', 'ЁЯОЙ ржЕржнрж┐ржиржирзНржжржи! ржЖржкржирж┐ ржЧрзНрж▓рзЛржмрж╛рж▓ ржмрзЛржирж╛рж╕ ржЕрж░рзНржЬржи ржХрж░рзЗржЫрзЗржи!');
    }

}
